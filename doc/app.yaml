# Configuration for Azure Container App
# Based on terraform-azurerm-avm-res-app-containerapp module

# Required parameters
name: "sample-container-app"
resource_group_name: "rg-container-apps"
container_app_environment_resource_id: "/subscriptions/{subscription_id}/resourceGroups/{resource_group}/providers/Microsoft.App/managedEnvironments/{environment_name}"
revision_mode: "Single" # Possible values: Single, Multiple

# Template configuration
template:
  # Optional parameters
  max_replicas: 10
  min_replicas: 1
  # revision_suffix: "v1"

  # Container configuration (required)
  containers:
      cpu: 0.25 # Possible values: 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0
      memory: "0.5Gi" # Possible values: 0.5Gi, 1Gi, 1.5Gi, 2Gi, 2.5Gi, 3Gi, 3.5Gi, 4Gi
      # Optional container parameters
      args:
        - "--verbose"
      command:
        - "/bin/sh"
        - "-c"
        - "echo hello"
      env:
        - name: "ENVIRONMENT"
          value: "production"
        - name: "SECRET_SETTING"
          secret_name: "my-secret"

      # Health probes
      liveness_probes:
        - transport: "HTTP" # Possible values: TCP, HTTP, HTTPS
          port: 8080
          path: "/health"
          host: "localhost"
          initial_delay: 10
          interval_seconds: 10
          timeout: 5
          failure_count_threshold: 3
          # header:
          #   - name: "Custom-Header"
          #     value: "Value"

      readiness_probes:
        - transport: "HTTP"
          port: 8080
          path: "/ready"
          host: "localhost"
          initial_delay: 5
          interval_seconds: 10
          timeout: 5
          failure_count_threshold: 3
          success_count_threshold: 3
          # header:
          #   - name: "Custom-Header"
          #     value: "Value"

      startup_probe:
        - transport: "HTTP"
          port: 8080
          path: "/startup"
          initial_delay: 0
          interval_seconds: 5
          timeout: 2
          failure_count_threshold: 3

      # volume_mounts:
      #   - name: "config-volume"
      #     path: "/config"

  # Optional init containers
  # init_containers:
  #   - name: "init-container"
  #     image: "busybox:latest"
  #     command:
  #       - "/bin/sh"
  #       - "-c"
  #       - "echo initializing app"
  #     env:
  #       - name: "INIT_ENV"
  #         value: "setup"
  #     volume_mounts:
  #       - name: "config-volume"
  #         path: "/config"

  # Volume configuration
  # volumes:
  #   - name: "config-volume"
  #     storage_type: "EmptyDir" # Possible values: AzureFile, EmptyDir, Secret
  #   - name: "data-volume"
  #     storage_type: "AzureFile"
  #     storage_name: "my-storage"

  # Scale rules
  # azure_queue_scale_rules:
  #   - name: "queue-scaler"
  #     queue_name: "messages"
  #     queue_length: 10
  #     authentication:
  #       - secret_name: "queue-connection"
  #         trigger_parameter: "connection"

  http_scale_rules:
    - name: "http-scaler"
      concurrent_requests: "50"
      authentication:
        - secret_name: "auth-secret"
          trigger_parameter: "auth-param"

  # tcp_scale_rules:
  #   - name: "tcp-scaler"
  #     concurrent_requests: "100"
  #     authentication:
  #       - secret_name: "tcp-auth-secret"
  #         trigger_parameter: "tcp-auth-param"

  # custom_scale_rules:
  #   - name: "custom-scaler"
  #     custom_rule_type: "cpu"
  #     metadata:
  #       value: "50"
  #       operator: "GreaterThan"
  #     authentication:
  #       - secret_name: "custom-auth-secret"
  #         trigger_parameter: "custom-auth-param"

# Ingress configuration
ingress:
  external_enabled: true
  target_port: 8080
  exposed_port: 80
  transport: "http" # Possible values: auto, http, http2, tcp
  allow_insecure_connections: false
  client_certificate_mode: "ignore" # Possible values: require, accept, ignore

  # Custom domain configuration
  custom_domain:
    name: "app.example.com"
    certificate_id: "/subscriptions/{subscription_id}/resourceGroups/{resource_group}/providers/Microsoft.App/managedEnvironments/{env_name}/certificates/{cert_name}"
    certificate_binding_type: "SniEnabled" # Possible values: Disabled, SniEnabled

  # IP security restrictions
  ip_security_restriction:
    - name: "allow-office"
      action: "Allow"
      ip_address_range: "203.0.113.0/24"
      description: "Allow office network"
    - name: "deny-specific"
      action: "Deny"
      ip_address_range: "198.51.100.10/32"
      description: "Block specific IP"

  # Traffic weight distribution
  traffic_weight:
    - label: "production"
      latest_revision: true
      percentage: 90
    - label: "staging"
      revision_suffix: "v2"
      percentage: 10

# Dapr configuration
dapr:
  app_id: "my-dapr-app"
  app_port: 8080
  app_protocol: "http" # Possible values: http, grpc

# Authentication config
auth_configs:
  auth-config-1:
    name: "my-auth-config"

    platform:
      enabled: true
      runtime_version: "v2"

    global_validation:
      unauthenticated_client_action: "RedirectToLoginPage" # Possible values: AllowAnonymous, RedirectToLoginPage, Return401, Return403
      redirect_to_provider: "aad"
      exclude_paths:
        - "/api/health"
        - "/metrics"

    identity_providers:
      azure_active_directory:
        enabled: true
        registration:
          client_id: "00000000-0000-0000-0000-000000000000"
          client_secret_setting_name: "AAD_CLIENT_SECRET"
          open_id_issuer: "https://login.microsoftonline.com/v2.0/{tenant-guid}/"
        login:
          login_parameters:
            - "domain_hint=mytenant.com"
          disable_www_authenticate: false
        validation:
          allowed_audiences:
            - "api://myapp"
          jwt_claim_checks:
            allowed_groups:
              - "group-id-1"
            allowed_client_applications:
              - "app-id-1"
          default_authorization_policy:
            allowed_principals:
              groups:
                - "group-id-2"
              identities:
                - "user-id-1"
            allowed_applications:
              - "app-id-2"

      github:
        enabled: true
        registration:
          client_id: "github-client-id"
          client_secret_setting_name: "GITHUB_CLIENT_SECRET"
        login:
          scopes:
            - "user:email"

    login:
      routes:
        logout_endpoint: "/logout"
      token_store:
        enabled: true
        token_refresh_extension_hours: 72
        azure_blob_storage:
          sas_url_setting_name: "STORAGE_SAS_URL"
      preserve_url_fragments_for_logins: true
      allowed_external_redirect_urls:
        - "https://myapp.example.com/callback"
      cookie_expiration:
        convention: "FixedTime"
        time_to_expiration: "08:00:00"
      nonce:
        validate_nonce: true
        nonce_expiration_interval: "00:05:00"

    http_settings:
      require_https: true
      forward_proxy:
        convention: "Standard"
        custom_host_header_name: "X-Forwarded-Host"
        custom_proto_header_name: "X-Forwarded-Proto"
      routes:
        api_prefix: "/api"

    encryption_settings:
      container_app_auth_encryption_secret_name: "encryption-key"
      container_app_auth_signing_secret_name: "signing-key"

# Container registry configuration
registries:
  - server: "myregistry.azurecr.io"
    username: "registry-user"
    password_secret_name: "registry-password"
  - server: "mcr.microsoft.com"
    identity: "/subscriptions/{subscription_id}/resourceGroups/{resource_group}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identity_name}"

# Secrets configuration
secrets:
  my-secret:
    name: "my-secret"
    value: "super-secret-value" # This would be a sensitive value in practice
  registry-password:
    name: "registry-password"
    value: "password123" # This would be a sensitive value in practice
  keyvault-secret:
    name: "keyvault-secret"
    key_vault_secret_id: "/subscriptions/{subscription_id}/resourceGroups/{resource_group}/providers/Microsoft.KeyVault/vaults/{vault_name}/secrets/{secret_name}"
    identity: "System"

# Custom domains configuration
custom_domains:
  domain1:
    name: "app.example.com"
    certificate_binding_type: "SniEnabled" # Possible values: Disabled, SniEnabled
    container_app_environment_certificate_id: "/subscriptions/{subscription_id}/resourceGroups/{resource_group}/providers/Microsoft.App/managedEnvironments/{env_name}/certificates/{cert_name}"
    timeouts:
      create: "30m"
      delete: "30m"
      read: "5m"

# Managed identities
managed_identities:
  system_assigned: true
  user_assigned_resource_ids:
    - "/subscriptions/{subscription_id}/resourceGroups/{resource_group}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identity_name}"

# Role assignments
role_assignments:
  role1:
    role_definition_id_or_name: "Storage Blob Data Contributor"
    principal_id: "00000000-0000-0000-0000-000000000000"
    description: "Allow container app to access blob storage"
    skip_service_principal_aad_check: false
  role2:
    role_definition_id_or_name: "AcrPull"
    principal_id: "11111111-1111-1111-1111-111111111111"
    principal_type: "ServicePrincipal"

# Resource locking
lock:
  kind: "CanNotDelete" # Possible values: CanNotDelete, ReadOnly
  name: "lock-container-app"

# Timeouts
container_app_timeouts:
  create: "30m"
  update: "30m"
  read: "5m"
  delete: "30m"

# Workload profile
workload_profile_name: "Consumption"

# Tags
tags:
  Environment: "Production"
  Department: "IT"
  Project: "ContainerApps"

# Telemetry
enable_telemetry: true